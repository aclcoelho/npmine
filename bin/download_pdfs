#!/usr/bin/env python3

import os
import re
import json
from npmine.retrieve_chemical_entities import download_pdf
import sys

'''usage
   download_pdfs <urls_file> <current_files>
'''

def download_pdfs(url_file, pattern='', rpattern=''):
    if not os.path.exists('pdfs'):
        os.makedirs('pdfs')

    with open(url_file) as f:
        dois = json.load(f)

    for url in dois:
        if pattern!='':
            fl = 'pdfs/%s.pdf' % url.replace(pattern, '').replace('/', '_')
        elif rpattern!='':
            fl = 'pdfs/%s.pdf' %  re.sub(rpattern, '\\1', url)
        else:
            fl = 'pdfs/%s' % url.split('/')[-1]
        download_pdf(url, fl)


def download_pdfs_alt(url):
    fl = 'pdfs/%s.pdf' % re.sub('.+/(S.+)/.+', '\\1', url)
    download_pdf(url, fl)


if __name__ == '__main__':
    if not os.path.exists('pdfs'):
        os.makedirs('pdfs')

    with open(sys.argv[1]) as f:
        dois = json.load(f)

    with open(sys.argv[2]) as f:
        fls = f.read().splitlines()

    # specific hardcoded pattern
    dois = [x for x in dois if '%s.pdf' % re.sub('.+/(S.+)/.+', '\\1', x) not in fls]

    with Pool(20) as p:
        p.map(download_pdfs_alt, dois)
